--- a/src/ap/hw_features.c
+++ b/src/ap/hw_features.c
@@ -1090,12 +1090,7 @@ int hostapd_select_hw_mode(struct hostap
 	     iface->conf->ieee80211n || iface->conf->ieee80211ac ||
 	     iface->conf->ieee80211ax || iface->conf->ieee80211be) &&
 	    iface->conf->channel == 14) {
-		wpa_printf(MSG_INFO, "Disable OFDM/HT/VHT/HE/EHT on channel 14");
-		iface->conf->hw_mode = HOSTAPD_MODE_IEEE80211B;
-		iface->conf->ieee80211n = 0;
-		iface->conf->ieee80211ac = 0;
-		iface->conf->ieee80211ax = 0;
-		iface->conf->ieee80211be = 0;
+		iface->conf->hw_mode = HOSTAPD_MODE_IEEE80211G;
 	}
 
 	iface->current_mode = NULL;
--- a/src/common/ieee802_11_common.c
+++ b/src/common/ieee802_11_common.c
@@ -907,6 +907,26 @@ ieee80211_freq_to_channel_ext(unsigned i
 	if (sec_channel > 1 || sec_channel < -1)
 		return NUM_HOSTAPD_MODES;
 
+	if (freq >= 2192 && freq <= 2407) {
+		if ((freq - 2192) % 5)
+			return NUM_HOSTAPD_MODES;
+
+		if (chanwidth)
+			return NUM_HOSTAPD_MODES;
+
+		/* 2.407 GHz, channels 1..13 */
+		if (sec_channel == 1)
+			*op_class = 83;
+		else if (sec_channel == -1)
+			*op_class = 84;
+		else
+			*op_class = 81;
+
+		*channel = (freq - 2192) / 5 + 213;
+
+		return HOSTAPD_MODE_IEEE80211G;
+	}
+
 	if (freq >= 2412 && freq <= 2472) {
 		if ((freq - 2407) % 5)
 			return NUM_HOSTAPD_MODES;
@@ -931,10 +951,15 @@ ieee80211_freq_to_channel_ext(unsigned i
 		if (sec_channel || chanwidth)
 			return NUM_HOSTAPD_MODES;
 
-		*op_class = 82; /* channel 14 */
+		if (sec_channel == 1)
+			*op_class = 83;
+		else if (sec_channel == -1)
+			*op_class = 84;
+		else
+			*op_class = 81;
 		*channel = 14;
 
-		return HOSTAPD_MODE_IEEE80211B;
+		return HOSTAPD_MODE_IEEE80211G;
 	}
 
 	if (freq >= 4900 && freq < 5000) {
@@ -960,46 +985,25 @@ ieee80211_freq_to_channel_ext(unsigned i
 		break;
 	}
 
-	/* 5 GHz, channels 36..48 */
-	if (freq >= 5180 && freq <= 5240) {
-		if ((freq - 5000) % 5)
-			return NUM_HOSTAPD_MODES;
-
-		if (vht_opclass)
-			*op_class = vht_opclass;
-		else if (sec_channel == 1)
-			*op_class = 116;
-		else if (sec_channel == -1)
-			*op_class = 117;
-		else
-			*op_class = 115;
-
-		*channel = (freq - 5000) / 5;
-
-		return HOSTAPD_MODE_IEEE80211A;
-	}
-
-	/* 5 GHz, channels 52..64 */
-	if (freq >= 5260 && freq <= 5320) {
-		if ((freq - 5000) % 5)
+	if (freq >= 4920 && freq <= 5000) {
+		if ((freq - 4000) % 5)
 			return NUM_HOSTAPD_MODES;
 
 		if (vht_opclass)
 			*op_class = vht_opclass;
 		else if (sec_channel == 1)
-			*op_class = 119;
+			*op_class = 126;
 		else if (sec_channel == -1)
-			*op_class = 120;
+			*op_class = 127;
 		else
-			*op_class = 118;
+			*op_class = 125;
 
-		*channel = (freq - 5000) / 5;
+		*channel = (freq - 4000) / 5;
 
 		return HOSTAPD_MODE_IEEE80211A;
 	}
 
-	/* 5 GHz, channels 149..177 */
-	if (freq >= 5745 && freq <= 5885) {
+	if (freq >= 5005 && freq <= 5915) {
 		if ((freq - 5000) % 5)
 			return NUM_HOSTAPD_MODES;
 
@@ -1009,8 +1013,6 @@ ieee80211_freq_to_channel_ext(unsigned i
 			*op_class = 126;
 		else if (sec_channel == -1)
 			*op_class = 127;
-		else if (freq <= 5805)
-			*op_class = 124;
 		else
 			*op_class = 125;
 
@@ -1019,35 +1021,26 @@ ieee80211_freq_to_channel_ext(unsigned i
 		return HOSTAPD_MODE_IEEE80211A;
 	}
 
-	/* 5 GHz, channels 100..144 */
-	if (freq >= 5500 && freq <= 5720) {
-		if ((freq - 5000) % 5)
+	if (freq >= 5920 && freq <= 6100) {
+		if ((freq - 5920) % 5)
 			return NUM_HOSTAPD_MODES;
 
 		if (vht_opclass)
 			*op_class = vht_opclass;
 		else if (sec_channel == 1)
-			*op_class = 122;
+			*op_class = 126;
 		else if (sec_channel == -1)
-			*op_class = 123;
+			*op_class = 127;
 		else
-			*op_class = 121;
-
-		*channel = (freq - 5000) / 5;
+			*op_class = 125;
 
-		return HOSTAPD_MODE_IEEE80211A;
-	}
+		*channel = (freq - 5920) / 5 + 201;
 
-	if (freq >= 5000 && freq < 5900) {
-		if ((freq - 5000) % 5)
-			return NUM_HOSTAPD_MODES;
-		*channel = (freq - 5000) / 5;
-		*op_class = 0; /* TODO */
 		return HOSTAPD_MODE_IEEE80211A;
 	}
 
-	if (freq > 5950 && freq <= 7115) {
-		if ((freq - 5950) % 5)
+	if (freq > 6100 && freq <= 7115) {
+		if ((freq - 6100) % 5)
 			return NUM_HOSTAPD_MODES;
 
 		switch (chanwidth) {
@@ -1071,7 +1064,7 @@ ieee80211_freq_to_channel_ext(unsigned i
 			break;
 		}
 
-		*channel = (freq - 5950) / 5;
+		*channel = (freq - 6100) / 5;
 		return HOSTAPD_MODE_IEEE80211A;
 	}
 
@@ -1889,25 +1882,16 @@ struct wpabuf * mb_ies_by_info(struct mb
 
 const struct oper_class_map global_op_class[] = {
 	{ HOSTAPD_MODE_IEEE80211G, 81, 1, 13, 1, BW20, P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211G, 82, 14, 14, 1, BW20, NO_P2P_SUPP },
+	{ HOSTAPD_MODE_IEEE80211G, 82, 14, 14, 1, BW20, P2P_SUPP },
 
-	/* Do not enable HT40 on 2.4 GHz for P2P use for now */
-	{ HOSTAPD_MODE_IEEE80211G, 83, 1, 9, 1, BW40PLUS, NO_P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211G, 84, 5, 13, 1, BW40MINUS, NO_P2P_SUPP },
-
-	{ HOSTAPD_MODE_IEEE80211A, 115, 36, 48, 4, BW20, P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211A, 116, 36, 44, 8, BW40PLUS, P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211A, 117, 40, 48, 8, BW40MINUS, P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211A, 118, 52, 64, 4, BW20, NO_P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211A, 119, 52, 60, 8, BW40PLUS, NO_P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211A, 120, 56, 64, 8, BW40MINUS, NO_P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211A, 121, 100, 140, 4, BW20, NO_P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211A, 122, 100, 132, 8, BW40PLUS, NO_P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211A, 123, 104, 136, 8, BW40MINUS, NO_P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211A, 124, 149, 161, 4, BW20, P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211A, 125, 149, 177, 4, BW20, P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211A, 126, 149, 173, 8, BW40PLUS, P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211A, 127, 153, 177, 8, BW40MINUS, P2P_SUPP },
+	{ HOSTAPD_MODE_IEEE80211G, 83, 1, 9, 1, BW40PLUS, P2P_SUPP },
+	{ HOSTAPD_MODE_IEEE80211G, 84, 5, 13, 1, BW40MINUS, P2P_SUPP },
+	{ HOSTAPD_MODE_IEEE80211G, 83, 231, 255, 1, BW40PLUS, P2P_SUPP },
+	{ HOSTAPD_MODE_IEEE80211G, 84, 231, 255, 1, BW40MINUS, P2P_SUPP },
+
+	{ HOSTAPD_MODE_IEEE80211A, 125, 1, 237, 4, BW20, P2P_SUPP },
+	{ HOSTAPD_MODE_IEEE80211A, 126, 1, 237, 8, BW40PLUS, P2P_SUPP },
+	{ HOSTAPD_MODE_IEEE80211A, 127, 1, 237, 8, BW40MINUS, P2P_SUPP },
 
 	/*
 	 * IEEE Std 802.11ax-2021, Table E-4 actually talks about channel center
@@ -1923,8 +1907,8 @@ const struct oper_class_map global_op_cl
 	{ HOSTAPD_MODE_IEEE80211A, 132, 1, 233, 8, BW40, P2P_SUPP },
 	{ HOSTAPD_MODE_IEEE80211A, 133, 1, 233, 16, BW80, P2P_SUPP },
 	{ HOSTAPD_MODE_IEEE80211A, 134, 1, 233, 32, BW160, P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211A, 135, 1, 233, 16, BW80P80, NO_P2P_SUPP },
-	{ HOSTAPD_MODE_IEEE80211A, 136, 2, 2, 4, BW20, NO_P2P_SUPP },
+	{ HOSTAPD_MODE_IEEE80211A, 135, 1, 233, 16, BW80P80, P2P_SUPP },
+	{ HOSTAPD_MODE_IEEE80211A, 136, 2, 2, 4, BW20, P2P_SUPP },
 
 	/*
 	 * IEEE Std 802.11ad-2012 and P802.ay/D5.0 60 GHz operating classes.
